spring.application.name=backend

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# \uC11C\uBC84 \uD3EC\uD2B8
server.port=8080

# \uB85C\uAE45
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql=INFO
logging.level.io.lettuce.core=WARN
logging.level.com.isitempty=INFO
logging.level.com.isitempty.backend.realtimeinfo=INFO
logging.level.com.isitempty.backend.parkinglot=INFO
logging.level.com.isitempty.backend.parkinglot.service.ParkingLotService=INFO
logging.level.com.isitempty.backend.parkinglot.service.ParkingLotMappingService=INFO

# Jackson
spring.jackson.serialization.fail-on-empty-beans=false

# \uD504\uB85C\uD544 \uC124\uC815
spring.profiles.active=dev

# 순환 참조 허용
spring.main.allow-circular-references=true
# 빈 정의 오버라이딩 허용
spring.main.allow-bean-definition-overriding=true

# Google OAuth
spring.security.oauth2.client.registration.google.scope=email,profile

# Naver OAuth
spring.security.oauth2.client.registration.naver.client-authentication-method=post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.scope=nickname,email
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Kakao OAuth
spring.security.oauth2.client.registration.kakao.client-authentication-method=post
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.kakao.scope=profile_nickname
spring.security.oauth2.client.registration.kakao.client-name=Kakao

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# CORS
cors.allowed-origins=http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.max-age=3600

# App Custom Auth
app.oauth2.authorizedRedirectUris=http://localhost:3000/oauth/redirect